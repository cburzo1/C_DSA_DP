#include <stdio.h>
#include <stdlib.h>

struct TNode{
    int data;
    struct TNode *lch;
    struct TNode *rch;
}*root = NULL;

struct QNode{
    struct TNode *data;
    struct QNode *next;
}*head =NULL, *tail = NULL;

void enQ(struct TNode *val){
    struct QNode *newNode = (struct QNode*)malloc(sizeof(struct QNode));
    
    newNode->data = val;
    
    if(head == NULL){
        head = newNode;
        tail = newNode;
    }else{
        tail->next = newNode;
        tail = newNode;
    }
}

struct TNode *dQ(){
    if(head == NULL){
        printf("Empty!");
    }else{
        struct TNode *oldHead = head->data;
        
        head = head->next;
        
        return oldHead;
    }
}

int Empty(){
    if(head == NULL){
        return 1;
    }else{
        return 0;
    }
}

void addToTree(int val){
    struct TNode *newNode = (struct TNode*)malloc(sizeof(struct TNode));
    
    newNode->data = val;
    
    if(root == NULL){
        root = newNode;
        enQ(root);
    }else{
        while(Empty() != 1){
            struct TNode *p = head->data;
            
            
            if(p->lch == NULL){
                p->lch = newNode;
                //printf("lch %p ", p);
                return;
            }else{
                enQ(p->lch);
            }
            
            if(p->rch == NULL){
                p->rch = newNode;
                //printf("rch %p ", p->rch);
                return;
            }else{
                enQ(p->rch);
            }
            
            dQ();
        }
    }
}

void displayT(struct TNode *p){
    if(p == NULL){
        return;
    }
    
    displayT(p->lch);
    printf(" %d ", p->data);
    displayT(p->rch);
}

void displayQ(){
    struct QNode *current = head;
    
    while(current != NULL){
        printf(" - > %p ", current);
        current = current->next;
    }
}

int main()
{
    int a = 5;
    
    addToTree(a);
    addToTree(2);
    addToTree(3);
    
    //printf("%d", root->data);
    //printf("%d", root->lch->data);
    //printf("%d", root->rch->data);
    
    displayT(root);

    return 0;
}